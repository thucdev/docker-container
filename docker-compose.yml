version: '1.0'

networks:
  loki: {}

services:
  mongodb:
    container_name: 'app-mongodb'
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - ./data/mongo:/data/db

  app1:
    container_name: 'app-1'
    build:
      context: .
      dockerfile: ./app1/Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./app1:/var/www/app1

  app2:
    container_name: 'app-2'
    build:
      context: .
      dockerfile: ./app2/Dockerfile
    ports:
      - 4000:4000
    volumes:
      - ./app2:/var/www/app2

  loki:
    command: -config.file=/etc/loki/config.yml
    container_name: app-loki
    image: grafana/loki:latest
    networks:
      loki: null
    ports:
      - protocol: tcp
        published: 3008
        target: 3008
    restart: always
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro

  grafana:
    container_name: app-grafana

    # See: https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#override-configuration-with-environment-variables
    environment:
      - GF_LOG_MODE=console file
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=true
      - GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES=true
    image: grafana/grafana:latest
    networks:
      loki: null
    ports:
      - protocol: tcp
        published: 3009
        target: 3000
    restart: always
    # See: https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config/provisioning:/etc/grafana/provisioning
      - ./grafana/logs:/var/log/grafana

  promtail:
    command: -config.file=/etc/promtail/config.yml
    container_name: app-promtail
    image: grafana/promtail:latest
    networks:
      loki: null
    ports:
      - protocol: tcp
        published: 1514
        target: 1514
      - protocol: tcp
        published: 9080
        target: 9080
    restart: always
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
